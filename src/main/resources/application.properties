##Oringinal
#
#
## Defines your application's context path when it is run in the application server
server.servlet.contextPath=/dessert
##spring.webflux.base-path=/dessert
#
#
## Configures Spring Boot to add various mappings for your static files
spring.web.resources.add-mappings=true
#
spring.web.resources.static-locations[0]=file:src/main/resources/static/
spring.web.resources.static-locations[1]=classpath:/static/
logging.config=classpath:logback-spring.xml
logging.level.=INFO
#server.tomcat.threads.min-spare=30
#
#
#
## WebFlux 服務埠
server.port=8080

#spring.datasource.url=jdbc:postgresql://localhost:5432/postgresTEST?schema=mitactest
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.pool-name=SpringBootHikariCP
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
#
## MySQL R2DBC 連線
#spring.r2dbc.url=r2dbc:mysql://localhost:3306/mitactest?serverTimezone=Asia/Taipei
#spring.r2dbc.username=root
#spring.r2dbc.password=root
#
## 避免使用 JDBC 連線池
#spring.sql.init.mode=never
#
####:for DB - datasource - mariaDB
##spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
####:for DB - datasource - mysql
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
####:for DB - datasource - mariaDB
##spring.datasource.url=jdbc:mariadb://localhost:3306/demo?serverTimezone=Asia/Taipei
####:for DB - datasource - mysql
spring.datasource.url=jdbc:mysql://localhost:3306/mitactest?serverTimezone=Asia/Taipei
####:for DB - datasource - mariaDB
##spring.datasource.username=root
##spring.datasource.password=mariadbUser
#
#####:for DB - datasource - mysql
spring.datasource.username=root
spring.datasource.password=root
#
##spring.datasource.jndi-name=jdbc/TestDB3
##spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
##spring.jpa.hibernate.ddl-auto=none
#spring.datasource.hikari.maximum-pool-size=50
#spring.datasource.hikari.minimum-idle=0
#
#
#
#
#
###:for DB-redis
# REDIS (RedisProperties)
# Redisè³æåº«ç´¢å¼ï¼é è¨­çº0ï¼
#spring.redis.database=0
# Redisä¼ºæå¨å°åï¼ä¸é¢çº Docker Redis é è¨­çä½ç½®ï¼
spring.redis.host= localhost
# Redisä¼ºæå¨é£ç·å 
spring.redis.port=6379
# é£ç·æ± æå¤§é£ç·æ¸ï¼ä½¿ç¨è² å¼è¡¨ç¤ºæ²æéå¶ï¼
spring.redis.jedis.pool.max-active=-1
# é£ç·æ± æå¤§ç­å¾æéï¼ä½¿ç¨è² å¼è¡¨ç¤ºæ²æéå¶ï¼
spring.redis.jedis.pool.max-wait=-1
# é£ç·æ± ä¸­çæå¤§ç©ºéé£ç·
spring.redis.jedis.pool.max-idle=0
# é£ç·æ± ä¸­çæå°ç©ºéé£ç·
spring.redis.jedis.pool.min-idle=0
# é£ç·è¶ææéï¼æ¯«ç§ï¼ï¼ä¸è¦è¨­ç½®çº0ï¼ä¸ç¶æå¾å¸¸ç¼ç Connect time out çæ³ï¼
spring.redis.timeout=5000
spring.redis.database=2

spring.mvc.throw-exception-if-no-handler-found=true
spring.mvc.hiddenmethod.filter.enabled=true




###TEST
### WebFlux 服務埠
#server.port=8080
##
### WebFlux base path
#spring.webflux.base-path=/dessert
##
### 靜態資源
#spring.web.resources.add-mappings=true
#spring.web.resources.static-locations[0]=file:src/main/resources/static/
#spring.web.resources.static-locations[1]=classpath:/static/
##
### Logging
#logging.level.=INFO
##
#### 使用 R2DBC 連線 MySQL
###spring.r2dbc.url=r2dbc:mysql://localhost:3306/mitactest?serverTimezone=Asia/Taipei
###spring.r2dbc.username=root
###spring.r2dbc.password=root
##
##
#spring.r2dbc.url=r2dbc:postgresql://localhost:5432/postgresTEST?schema=mitactest
#spring.r2dbc.username=root
#spring.r2dbc.password=root
#spring.r2dbc.pool.validation-query=SELECT 1
##
### 如果你有使用 Spring Data R2DBC：
#spring.sql.init.platform=postgres
##
#spring.r2dbc.pool.initial-size=10
#spring.r2dbc.pool.max-size=150
#spring.r2dbc.pool.max-idle-time=0s
##
### 禁用 SQL 初始化（因為不是 JDBC）
#spring.sql.init.mode=never
##
#logging.level.org.springframework.web.reactive.function.client=DEBUG
#logging.level.reactor.netty.http.client=DEBUG


##LINEPAY TEST
linepay.channel.id=2007427122
linepay.channel.secret=ecaac5cd5e09ed6e4e4fb92d23ed105b
linepay.api.baseurl=https://sandbox-api-pay.line.me
linepay.payment.return.url.confirm=https://5555-114-34-95-172.ngrok-free.app/dessert/
linepay.payment.return.url.cancel=https://5555-114-34-95-172.ngrok-free.app/dessert/test-error

#Kafka test

# Kafka broker 位址（本機為例）
spring.kafka.bootstrap-servers=localhost:29092

# Consumer 設定
spring.kafka.consumer.group-id=my-consumer-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# Producer 設定
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer 